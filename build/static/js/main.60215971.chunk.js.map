{"version":3,"sources":["App.js","registerServiceWorker.js","index.js","utils/asyncComponent.js"],"names":["Schedule","asyncComponent","Promise","all","__webpack_require__","e","then","bind","ContactsPage","Home","Nav","TestPage","Competitions","Events","Workshops","Talks","Background","App","react_default","a","createElement","className","react_router","path","component","exact","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","react_router_dom","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","importComponent","spinnerComponent","arguments","length","undefined","_Component","AsyncComponent","props","_this","Object","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_componentDidMount","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_nikhil_excel_excel19localjson_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref","wrap","_context","prev","next","sent","default","setState","stop","apply","C","react__WEBPACK_IMPORTED_MODULE_7___default"],"mappings":"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","file":"static/js/main.60215971.chunk.js","sourcesContent":["import React from 'react'\nimport asyncComponent from './utils/asyncComponent'\nimport {Switch, Route} from 'react-router-dom'\nimport './App.css'\n\n\nconst ScheduleImport = () => import('./pages/schedule')\nconst Schedule = asyncComponent(ScheduleImport)\n\nconst ContactsPageImport = () => import('pages/contacts')\nconst ContactsPage = asyncComponent(ContactsPageImport)\n\nconst HomeImport = () => import('pages/home')\nconst Home = asyncComponent(HomeImport)\n\nconst NavImport = () => import('./components/navbar')\nconst Nav = asyncComponent(NavImport)\n\nconst TestPageImport = () => import('pages/sample-component')\nconst TestPage = asyncComponent(TestPageImport)\n\nconst CompetitionsImport = () => import('pages/competitions')\nconst Competitions = asyncComponent(CompetitionsImport)\nconst EventsImport = () => import('pages/events')\nconst Events = asyncComponent(EventsImport)\n\nconst WorkshopsImport = () => import('pages/workshops')\nconst Workshops = asyncComponent(WorkshopsImport)\n\nconst TalksImport = () => import('pages/talks')\nconst Talks = asyncComponent(TalksImport)\n\nconst BackgroundImport = () => import('components/background')\nconst Background = asyncComponent(BackgroundImport)\n\nexport default class App extends React.Component {\n    render() {\n        return(\n            <div className=\"pageContainer\">\n                <Background />\n                <Nav />\n                <Switch>\n                    <Route path=\"/contacts\" component={ContactsPage} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route path=\"/test\" component={TestPage} />\n                    <Route path=\"/schedule\" component={Schedule} />\n                    <Route path=\"/events\" component={Events} />\n                    <Route path=\"/workshops\" component={Workshops} />\n                    <Route path=\"/talks\" component={Talks} />\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/competitions\" component={Competitions} />\n                </Switch>\n            </div>\n        )\n    }\n}   \n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter} from 'react-router-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n)\n\nregisterServiceWorker()\n","// implements code splitting for route components\nimport React, { Component } from \"react\";\n\n/*\n * returns an a react component that\n * asynchronously loads the target component on mounting\n * renders an optional spinnerComponent while loading the main component\n */\nexport default function asyncComponent(\n  importComponent,\n  spinnerComponent = null\n) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null // the actual component will be asynchronously loaded on mounting\n      };\n    }\n\n    async componentDidMount() {\n      // async loading of the target component\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n      return C ? <C {...this.props} /> : spinnerComponent;\n    }\n  }\n\n  return AsyncComponent;\n}\n"],"sourceRoot":""}